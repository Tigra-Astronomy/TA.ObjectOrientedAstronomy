<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:String x:Key="/Default/CodeInspection/CodeAnnotations/DefaultNamespace/@EntryValue">TiGra.CodeAnnotations</s:String>
	<s:Boolean x:Key="/Default/CodeInspection/CodeAnnotations/NamespacesWithAnnotations/=Machine_002ESpecifications_002EAnnotations/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeInspection/CodeAnnotations/NamespacesWithAnnotations/=TiGra_002ECodeAnnotations/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/Profiles/=TPL_0020Extreme_0020Cleanup/@EntryIndexedValue">&lt;?xml version="1.0" encoding="utf-16"?&gt;&lt;Profile name="TPL Extreme Cleanup"&gt;&lt;AspOptimizeRegisterDirectives&gt;True&lt;/AspOptimizeRegisterDirectives&gt;&lt;HtmlReformatCode&gt;True&lt;/HtmlReformatCode&gt;&lt;RemoveCodeRedundancies&gt;True&lt;/RemoveCodeRedundancies&gt;&lt;CSUseAutoProperty&gt;True&lt;/CSUseAutoProperty&gt;&lt;CSMakeFieldReadonly&gt;True&lt;/CSMakeFieldReadonly&gt;&lt;CSUseVar&gt;&lt;BehavourStyle&gt;CAN_CHANGE_TO_IMPLICIT&lt;/BehavourStyle&gt;&lt;LocalVariableStyle&gt;ALWAYS_IMPLICIT&lt;/LocalVariableStyle&gt;&lt;ForeachVariableStyle&gt;IMPLICIT_EXCEPT_SIMPLE_TYPES&lt;/ForeachVariableStyle&gt;&lt;/CSUseVar&gt;&lt;CSUpdateFileHeader&gt;True&lt;/CSUpdateFileHeader&gt;&lt;CSOptimizeUsings&gt;&lt;OptimizeUsings&gt;True&lt;/OptimizeUsings&gt;&lt;EmbraceInRegion&gt;False&lt;/EmbraceInRegion&gt;&lt;RegionName&gt;&lt;/RegionName&gt;&lt;/CSOptimizeUsings&gt;&lt;CSShortenReferences&gt;True&lt;/CSShortenReferences&gt;&lt;CSReformatCode&gt;True&lt;/CSReformatCode&gt;&lt;CSharpFormatDocComments&gt;True&lt;/CSharpFormatDocComments&gt;&lt;CSReorderTypeMembers&gt;True&lt;/CSReorderTypeMembers&gt;&lt;VBOptimizeImports&gt;True&lt;/VBOptimizeImports&gt;&lt;VBShortenReferences&gt;True&lt;/VBShortenReferences&gt;&lt;VBReformatCode&gt;True&lt;/VBReformatCode&gt;&lt;VBFormatDocComments&gt;True&lt;/VBFormatDocComments&gt;&lt;JsInsertSemicolon&gt;True&lt;/JsInsertSemicolon&gt;&lt;JsReformatCode&gt;True&lt;/JsReformatCode&gt;&lt;JsFormatDocComments&gt;True&lt;/JsFormatDocComments&gt;&lt;CssAlphabetizeProperties&gt;True&lt;/CssAlphabetizeProperties&gt;&lt;CssReformatCode&gt;True&lt;/CssReformatCode&gt;&lt;XMLReformatCode&gt;True&lt;/XMLReformatCode&gt;&lt;CSArrangeThisQualifier&gt;True&lt;/CSArrangeThisQualifier&gt;&lt;/Profile&gt;</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_LINQ_QUERY/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_AUTO_PROPERTY/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_FIELD/@EntryValue">0</s:Int64>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_PROPERTY/@EntryValue">0</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_ATTRIBUTE_STYLE/@EntryValue">SEPARATE</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_LINQ_EXPRESSIONS/@EntryValue">CHOP_ALWAYS</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/CustomPattern/@EntryValue">&lt;?xml version="1.0" encoding="utf-8" ?&gt;&#xD;
&#xD;
&lt;!--&#xD;
I. Overall&#xD;
&#xD;
I.1 Each pattern can have &lt;Match&gt;....&lt;/Match&gt; element. For the given type declaration, the pattern with the match, evaluated to 'true' with the largest weight, will be used &#xD;
I.2 Each pattern consists of the sequence of &lt;Entry&gt;...&lt;/Entry&gt; elements. Type member declarations are distributed between entries&#xD;
I.3 If pattern has RemoveAllRegions="true" attribute, then all regions will be cleared prior to reordering. Otherwise, only auto-generated regions will be cleared&#xD;
I.4 The contents of each entry is sorted by given keys (First key is primary,  next key is secondary, etc). Then the declarations are grouped and en-regioned by given property&#xD;
&#xD;
II. Available match operands&#xD;
&#xD;
Each operand may have Weight="..." attribute. This weight will be added to the match weight if the operand is evaluated to 'true'.&#xD;
The default weight is 1&#xD;
&#xD;
II.1 Boolean functions:&#xD;
II.1.1 &lt;And&gt;....&lt;/And&gt;&#xD;
II.1.2 &lt;Or&gt;....&lt;/Or&gt;&#xD;
II.1.3 &lt;Not&gt;....&lt;/Not&gt;&#xD;
&#xD;
II.2 Operands&#xD;
II.2.1 &lt;Kind Is="..."/&gt;. Kinds are: class, struct, interface, enum, delegate, type, constructor, destructor, property, indexer, method, operator, field, constant, event, member&#xD;
II.2.2 &lt;Name Is="..." [IgnoreCase="true/false"] /&gt;. The 'Is' attribute contains regular expression&#xD;
II.2.3 &lt;HasAttribute CLRName="..." [Inherit="true/false"] /&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.4 &lt;Access Is="..."/&gt;. The 'Is' values are: public, protected, internal, protected-internal, private&#xD;
II.2.5 &lt;Static/&gt;&#xD;
II.2.6 &lt;Abstract/&gt;&#xD;
II.2.7 &lt;Virtual/&gt;&#xD;
II.2.8 &lt;Override/&gt;&#xD;
II.2.9 &lt;Sealed/&gt;&#xD;
II.2.10 &lt;Readonly/&gt;&#xD;
II.2.11 &lt;ImplementsInterface CLRName="..."/&gt;. The 'CLRName' attribute contains regular expression&#xD;
II.2.12 &lt;HandlesEvent /&gt;&#xD;
--&gt;&#xD;
&#xD;
&lt;Patterns xmlns="urn:shemas-jetbrains-com:member-reordering-patterns"&gt;&#xD;
&#xD;
  &lt;!--Do not reorder COM interfaces and structs marked by StructLayout attribute--&gt;&#xD;
  &lt;Pattern&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;Or Weight="100"&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="interface"/&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute CLRName="System.Runtime.InteropServices.InterfaceTypeAttribute"/&gt;&#xD;
            &lt;HasAttribute CLRName="System.Runtime.InteropServices.ComImport"/&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
        &lt;HasAttribute CLRName="System.Runtime.InteropServices.StructLayoutAttribute"/&gt;&#xD;
      &lt;/Or&gt;&#xD;
    &lt;/Match&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
  &lt;!--Special formatting of NUnit test fixture--&gt;&#xD;
  &lt;Pattern RemoveAllRegions="true"&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;And Weight="100"&gt;&#xD;
        &lt;Kind Is="class"/&gt;&#xD;
        &lt;HasAttribute CLRName="NUnit.Framework.TestFixtureAttribute" Inherit="true"/&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/Match&gt;&#xD;
&#xD;
    &lt;!--Setup/Teardow--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="method"/&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.SetUpAttribute" Inherit="true"/&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.TearDownAttribute" Inherit="true"/&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureSetUpAttribute" Inherit="true"/&gt;&#xD;
            &lt;HasAttribute CLRName="NUnit.Framework.FixtureTearDownAttribute" Inherit="true"/&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--All other members--&gt;&#xD;
    &lt;Entry/&gt;&#xD;
&#xD;
    &lt;!--Test methods--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Kind Is="method"/&gt;&#xD;
          &lt;HasAttribute CLRName="NUnit.Framework.TestAttribute" Inherit="false"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&#xD;
  &lt;!--Default pattern--&gt;&#xD;
  &lt;Pattern&gt;&#xD;
&#xD;
    &lt;!--public delegate--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Access Is="public"/&gt;&#xD;
          &lt;Kind Is="delegate"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--public enum--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Access Is="public"/&gt;&#xD;
          &lt;Kind Is="enum"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--static fields and constants--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="constant"/&gt;&#xD;
          &lt;And&gt;&#xD;
            &lt;Kind Is="field"/&gt;&#xD;
            &lt;Static/&gt;&#xD;
          &lt;/And&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Kind Order="constant field"/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--instance fields--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static/&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Readonly/&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--Constructors. Place static one first--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="constructor"/&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Static/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--properties, indexers--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;Kind Is="property"/&gt;&#xD;
          &lt;Kind Is="indexer"/&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--interface implementations--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And Weight="100"&gt;&#xD;
          &lt;Kind Is="member"/&gt;&#xD;
          &lt;ImplementsInterface/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;ImplementsInterface Immediate="true"/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
&#xD;
    &lt;!--all other members--&gt;&#xD;
    &lt;Entry/&gt;&#xD;
&#xD;
    &lt;!--nested types--&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;Kind Is="type"/&gt;&#xD;
      &lt;/Match&gt;&#xD;
      &lt;Sort&gt;&#xD;
        &lt;Name/&gt;&#xD;
      &lt;/Sort&gt;&#xD;
    &lt;/Entry&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
  &lt;!-- &#xD;
    Based on original work from Alexander Groß&#xD;
    http://www.therightstuff.de/2008/09/16/ReSharper-Type-Members-Layout-For-MSpec-02.aspx &#xD;
  --&gt;&#xD;
  &lt;!-- Order Machine.Specifications members: Establish, Cleanup, Because, It, behaviors, static fields, everything else --&gt;&#xD;
  &lt;Pattern&gt;&#xD;
    &lt;Match&gt;&#xD;
      &lt;And Weight="100"&gt;&#xD;
        &lt;Kind Is="class"/&gt;&#xD;
        &lt;Or&gt;&#xD;
          &lt;HasAttribute CLRName="Machine.Specifications.SubjectAttribute"&#xD;
                  Inherit="true"/&gt;&#xD;
          &lt;Name Is="^when_.+"&#xD;
              IgnoreCase="true" /&gt;&#xD;
        &lt;/Or&gt;&#xD;
      &lt;/And&gt;&#xD;
    &lt;/Match&gt;&#xD;
&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Name Is="^context(_once)?$"&#xD;
                IgnoreCase="true"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Name Is="^of$"&#xD;
              IgnoreCase="true"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Name Is="^after(_all)?$"&#xD;
              IgnoreCase="true"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Name Is="^should_.*$"&#xD;
                IgnoreCase="true"/&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Not&gt;&#xD;
            &lt;Static/&gt;&#xD;
          &lt;/Not&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;Entry&gt;&#xD;
      &lt;!-- static fields --&gt;&#xD;
      &lt;Match&gt;&#xD;
        &lt;And&gt;&#xD;
          &lt;Kind Is="field"/&gt;&#xD;
          &lt;Or&gt;&#xD;
            &lt;Access Is="protected"/&gt;&#xD;
            &lt;Static/&gt;&#xD;
          &lt;/Or&gt;&#xD;
        &lt;/And&gt;&#xD;
      &lt;/Match&gt;&#xD;
    &lt;/Entry&gt;&#xD;
    &lt;!-- All other members --&gt;&#xD;
    &lt;Entry/&gt;&#xD;
  &lt;/Pattern&gt;&#xD;
&lt;/Patterns&gt;&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpMemberOrderPattern/LayoutType/@EntryValue">CustomLayout</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">This file is part of the $SOLUTION$ project&#xD;
&#xD;
Copyright © $CURRENT_YEAR$ Tigra Astronomy, all rights reserved.&#xD;
&#xD;
File: $FILENAME$  Last modified: $CURRENT_YEAR$-$CURRENT_MONTH$-$CURRENT_DAY$@$CURRENT_TIME$ by $USER_NAME$</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=TypesAndNamespaces/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=3c11d55c_002Daa10_002D434e_002Da399_002Dd259f9b11708/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static, Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec supporting field (Establish, Because, Cleanup)"&gt;&lt;ElementKinds /&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aa_bb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=403c86fe_002D40ec_002D43ee_002Da7a5_002D7befaf925b47/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static, Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec specification (field of type It)"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_Specification" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="should_" Suffix="" Style="aa_bb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=6e2a395a_002D7019_002D4929_002D8c30_002D76375d299ef1/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static, Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec context (class with specifications)"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_Context" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="when_" Suffix="" Style="aa_bb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=72505dee_002D92f5_002D4b10_002Db809_002Dc9bc7c2d3e45/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static, Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec context base class"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_ContextBase" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="with_" Suffix="" Style="aa_bb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=9456779e_002D7432_002D416a_002Db117_002D3f41cf679980/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static, Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec constant"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_Constant" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb_AaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=ce8c40e9_002Da5b1_002D4d99_002Dab4b_002D13e7e7d9917b/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Static" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec non-supporting field (static)"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_Field" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="" Suffix="" Style="AaBb_AaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/UserRules/=f717dba4_002De844_002D4dff_002Da1da_002D64a357addd6f/@EntryIndexedValue">&lt;Policy&gt;&lt;Descriptor Staticness="Instance" AccessRightKinds="Private, Protected, ProtectedInternal, Internal, Public" Description="MSpec locals"&gt;&lt;ElementKinds&gt;&lt;Kind Name="Machine.Specifications_Local" /&gt;&lt;/ElementKinds&gt;&lt;/Descriptor&gt;&lt;Policy Inspect="True" Prefix="" Suffix="" Style="aaBb" /&gt;&lt;/Policy&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean></wpf:ResourceDictionary>